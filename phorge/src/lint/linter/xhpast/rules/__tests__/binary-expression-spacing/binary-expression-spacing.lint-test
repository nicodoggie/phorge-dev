<?php

$a + $b;
$a+$b;
$a +$b;
$a+ $b;
$a = -$b;
$a=-$b;
$a-=$b;
$a -=$b;
$a-= $b;
$a===$b;
$a.$b;
function x($n=null) {}
function x($n = null) {}

$y /* ! */ += // ?
$z;
$obj->method();
Dog::bark();
$prev = ($total == 1) ? $navids[0] : $navids[$total-1];
$next = ($total == 1) ? $navids[0] : $navids[$current+1];
if ($x instanceof z &&$w) {}
if ($x instanceof z && $w) {}
f(1,2);
~~~~~~~~~~
warning:4:3:XHP27:Space Around Binary Operator
warning:5:4:XHP27:Space Around Binary Operator
warning:6:3:XHP27:Space Around Binary Operator
warning:8:3:XHP27:Space Around Binary Operator
warning:9:3:XHP27:Space Around Binary Operator
warning:10:4:XHP27:Space Around Binary Operator
warning:11:3:XHP27:Space Around Binary Operator
warning:12:3:XHP27:Space Around Binary Operator
warning:14:14:XHP27:Space Around Binary Operator
warning:21:52:XHP27:Space Around Binary Operator
warning:22:54:XHP27:Space Around Binary Operator
warning:23:21:XHP27:Space Around Binary Operator
warning:25:4:XHP27:Space Around Binary Operator
~~~~~~~~~~
<?php

$a + $b;
$a + $b;
$a + $b;
$a + $b;
$a = -$b;
$a = -$b;
$a -= $b;
$a -= $b;
$a -= $b;
$a === $b;
$a.$b;
function x($n = null) {}
function x($n = null) {}

$y /* ! */ += // ?
$z;
$obj->method();
Dog::bark();
$prev = ($total == 1) ? $navids[0] : $navids[$total - 1];
$next = ($total == 1) ? $navids[0] : $navids[$current + 1];
if ($x instanceof z && $w) {}
if ($x instanceof z && $w) {}
f(1, 2);
